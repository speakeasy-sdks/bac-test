"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from bac import utils
from dataclasses_json import Undefined, dataclass_json
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class Deal:
    concurrency: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Concurrency'), 'exclude': lambda f: f is None }})
    r"""The maximum number of concurrent compute node bids that will be
    accepted by the requester node on behalf of the client.
    """
    targeting_mode: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TargetingMode'), 'exclude': lambda f: f is None }})
    r"""Whether the job should be run on any matching node (false) or all
    matching nodes (true). If true, other fields in this struct are ignored.
    """
    

