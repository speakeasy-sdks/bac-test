"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .engine import Engine
from .publisher import Publisher
from .resourceusagedata import ResourceUsageData
from .storagesourcetype import StorageSourceType
from bac import utils
from dataclasses_json import Undefined, dataclass_json
from typing import List, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ComputeNodeInfo:
    available_capacity: Optional[ResourceUsageData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AvailableCapacity'), 'exclude': lambda f: f is None }})
    enqueued_executions: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EnqueuedExecutions'), 'exclude': lambda f: f is None }})
    execution_engines: Optional[List[Engine]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExecutionEngines'), 'exclude': lambda f: f is None }})
    max_capacity: Optional[ResourceUsageData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaxCapacity'), 'exclude': lambda f: f is None }})
    max_job_requirements: Optional[ResourceUsageData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaxJobRequirements'), 'exclude': lambda f: f is None }})
    publishers: Optional[List[Publisher]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Publishers'), 'exclude': lambda f: f is None }})
    running_executions: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RunningExecutions'), 'exclude': lambda f: f is None }})
    storage_sources: Optional[List[StorageSourceType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StorageSources'), 'exclude': lambda f: f is None }})
    

