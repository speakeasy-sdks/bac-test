"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .job import Job
from .jobhistory import JobHistory
from .jobstate import JobState
from bac import utils
from dataclasses_json import Undefined, dataclass_json
from typing import List, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class JobWithInfo:
    history: Optional[List[JobHistory]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('History'), 'exclude': lambda f: f is None }})
    r"""History of changes to the job state. Not always populated in the job description"""
    job: Optional[Job] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Job'), 'exclude': lambda f: f is None }})
    r"""Job info"""
    state: Optional[JobState] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('State'), 'exclude': lambda f: f is None }})
    r"""The current state of the job"""
    

