"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from bac import utils
from dataclasses_json import Undefined, dataclass_json
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class RunCommandResult:
    exit_code: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exitCode'), 'exclude': lambda f: f is None }})
    r"""exit code of the run."""
    runner_error: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('runnerError'), 'exclude': lambda f: f is None }})
    r"""Runner error"""
    stderr: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stderr'), 'exclude': lambda f: f is None }})
    r"""stderr of the run."""
    stderrtruncated: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stderrtruncated'), 'exclude': lambda f: f is None }})
    r"""bool describing if stderr was truncated"""
    stdout: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stdout'), 'exclude': lambda f: f is None }})
    r"""stdout of the run. Yaml provided for `describe` output"""
    stdouttruncated: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stdouttruncated'), 'exclude': lambda f: f is None }})
    r"""bool describing if stdout was truncated"""
    

