"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import model_metadata as shared_model_metadata
from ..shared import model_spec as shared_model_spec
from dataclasses_json import Undefined, dataclass_json
from test_bac import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class ModelJob:
    api_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('APIVersion'), 'exclude': lambda f: f is None }})
    metadata: Optional[shared_model_metadata.ModelMetadata] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Metadata'), 'exclude': lambda f: f is None }})
    r"""TODO this doesn't seem like it should be a part of the job as it cannot be known by a client ahead of time."""
    spec: Optional[shared_model_spec.ModelSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Spec'), 'exclude': lambda f: f is None }})
    r"""The specification of this job."""
    

