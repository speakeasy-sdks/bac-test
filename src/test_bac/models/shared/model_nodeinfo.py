"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import model_buildversioninfo as shared_model_buildversioninfo
from ..shared import model_computenodeinfo as shared_model_computenodeinfo
from ..shared import model_nodetype as shared_model_nodetype
from ..shared import peer_addrinfo as shared_peer_addrinfo
from dataclasses_json import Undefined, dataclass_json
from test_bac import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class ModelNodeInfo:
    r"""OK"""
    bacalhau_version: Optional[shared_model_buildversioninfo.ModelBuildVersionInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BacalhauVersion'), 'exclude': lambda f: f is None }})
    compute_node_info: Optional[shared_model_computenodeinfo.ModelComputeNodeInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ComputeNodeInfo'), 'exclude': lambda f: f is None }})
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Labels'), 'exclude': lambda f: f is None }})
    node_type: Optional[shared_model_nodetype.ModelNodeType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NodeType'), 'exclude': lambda f: f is None }})
    peer_info: Optional[shared_peer_addrinfo.PeerAddrInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PeerInfo'), 'exclude': lambda f: f is None }})
    

