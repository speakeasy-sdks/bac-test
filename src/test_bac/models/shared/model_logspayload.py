"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from test_bac import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class ModelLogsPayload:
    client_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClientID') }})
    r"""the id of the client that is requesting the logs"""
    execution_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExecutionID') }})
    r"""the execution to be shown"""
    job_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('JobID') }})
    r"""the job id of the job to be shown"""
    follow: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Follow'), 'exclude': lambda f: f is None }})
    r"""whether the logs should be followed after the current logs are shown"""
    with_history: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WithHistory'), 'exclude': lambda f: f is None }})
    r"""whether the logs history is required"""
    

