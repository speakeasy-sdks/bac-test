"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import model_job as shared_model_job
from ..shared import model_jobhistory as shared_model_jobhistory
from ..shared import model_jobstate as shared_model_jobstate
from dataclasses_json import Undefined, dataclass_json
from test_bac import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class ModelJobWithInfo:
    history: Optional[list[shared_model_jobhistory.ModelJobHistory]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('History'), 'exclude': lambda f: f is None }})
    r"""History of changes to the job state. Not always populated in the job description"""
    job: Optional[shared_model_job.ModelJob] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Job'), 'exclude': lambda f: f is None }})
    r"""Job info"""
    state: Optional[shared_model_jobstate.ModelJobState] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('State'), 'exclude': lambda f: f is None }})
    r"""The current state of the job"""
    

